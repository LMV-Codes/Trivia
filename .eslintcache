[{"/home/lmv/Desktop/coding/quizapp/src/App.tsx":"1","/home/lmv/Desktop/coding/quizapp/src/pages/Home.tsx":"2","/home/lmv/Desktop/coding/quizapp/src/components/Navbar.tsx":"3","/home/lmv/Desktop/coding/quizapp/src/index.tsx":"4","/home/lmv/Desktop/coding/quizapp/src/components/Footer.tsx":"5","/home/lmv/Desktop/coding/quizapp/src/reportWebVitals.ts":"6","/home/lmv/Desktop/coding/quizapp/src/components/QuestionRandomizer.tsx":"7","/home/lmv/Desktop/coding/quizapp/src/components/TriviaParameterChoice.tsx":"8","/home/lmv/Desktop/coding/quizapp/src/components/TriviaQuestions.tsx":"9"},{"size":487,"mtime":1610489636409,"results":"10","hashOfConfig":"11"},{"size":1944,"mtime":1611591751195,"results":"12","hashOfConfig":"11"},{"size":612,"mtime":1612547217206,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1610481990388,"results":"14","hashOfConfig":"11"},{"size":846,"mtime":1612547225954,"results":"15","hashOfConfig":"11"},{"size":425,"mtime":1610481990388,"results":"16","hashOfConfig":"11"},{"size":1112,"mtime":1611176372603,"results":"17","hashOfConfig":"11"},{"size":6719,"mtime":1612546689565,"results":"18","hashOfConfig":"11"},{"size":5120,"mtime":1612547763244,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ngxqwe",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lmv/Desktop/coding/quizapp/src/App.tsx",["42"],"/home/lmv/Desktop/coding/quizapp/src/pages/Home.tsx",["43","44"],"import {\n  Container,\n  createStyles,\n  makeStyles,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { TriviaParameterChoice } from \"../components/TriviaParameterChoice\";\nimport { TriviaQuestions } from \"../components/TriviaQuestions\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    mainContainer: {\n      minHeight: \"100vh\",\n      overflow: \"hidden\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      paddingBottom: \"2em\",\n    },\n    title: {\n      fontSize: \"2em\",\n      letterSpacing: \".5em\",\n      fontWeight: \"lighter\",\n    },\n    form: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  })\n);\n\nexport interface TriviaData {\n  category: string;\n  type: string;\n  difficulty: string;\n  question: string;\n  correct_answer: string;\n  incorrect_answers: Array<string>;\n}\n\nexport const Home: React.FC = ({}) => {\n  const classes = useStyles();\n  const [dataRecieved, setDataRecieved] = useState<boolean>(false);\n  const [data, setData] = useState<TriviaData[]>([]);\n\n  return (\n    <Container className={classes.mainContainer}>\n      {dataRecieved === false ? (\n        <div className={classes.form}>\n          <Typography\n            variant=\"overline\"\n            align=\"center\"\n            className={classes.title}\n          >\n            welcome to trivianator\n          </Typography>\n          <Typography variant=\"body2\" align=\"center\">\n            Generate a trivia and test your knowledge\n          </Typography>\n        </div>\n      ) : null}\n\n      {dataRecieved === false ? (\n        <div>\n          <TriviaParameterChoice\n            setTriviaData={setData}\n            setDataRecieved={setDataRecieved}\n          />\n        </div>\n      ) : (\n        <TriviaQuestions triviaData={data} setDataRecieved={setDataRecieved} />\n      )}\n    </Container>\n  );\n};\n",["45","46"],"/home/lmv/Desktop/coding/quizapp/src/components/Navbar.tsx",["47"],"/home/lmv/Desktop/coding/quizapp/src/index.tsx",[],["48","49"],"/home/lmv/Desktop/coding/quizapp/src/components/Footer.tsx",["50"],"/home/lmv/Desktop/coding/quizapp/src/reportWebVitals.ts",[],"/home/lmv/Desktop/coding/quizapp/src/components/QuestionRandomizer.tsx",["51","52","53","54","55"],"import React, { useState } from \"react\";\nimport { Formik, FormikHelpers, FormikProps, Form, Field } from \"formik\";\n\ninterface QuestionRandomizerProps {\n  incorrectAnswers: Array<string>;\n  correctAnswer: string;\n}\n\nexport const QuestionRandomizer: React.FC<QuestionRandomizerProps> = ({\n  incorrectAnswers,\n  correctAnswer,\n}) => {\n  const combineAndRandomizeAnswers = (\n    incorrectAnswers: Array<string>,\n    correctAnswer: string\n  ) => {\n    let allAnswers: Array<string> = [...incorrectAnswers, correctAnswer];\n    for (let i = allAnswers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [allAnswers[i], allAnswers[j]] = [allAnswers[j], allAnswers[i]];\n    }\n    return allAnswers;\n  };\n  return (\n    <div>\n      {combineAndRandomizeAnswers(incorrectAnswers, correctAnswer).map(\n        (answer, index) => (\n          <div role=\"group\" aria-labelledby=\"radioGroup\" key={index}>\n            <label>\n              <Field type=\"radio\" value={answer} name=\"playerAnswer\" />\n              {answer}\n            </label>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n","/home/lmv/Desktop/coding/quizapp/src/components/TriviaParameterChoice.tsx",["56"],"/home/lmv/Desktop/coding/quizapp/src/components/TriviaQuestions.tsx",["57"],{"ruleId":"58","severity":1,"message":"59","line":2,"column":50,"nodeType":"60","messageId":"61","endLine":2,"endColumn":54},{"ruleId":"58","severity":1,"message":"62","line":6,"column":3,"nodeType":"60","messageId":"61","endLine":6,"endColumn":9},{"ruleId":"63","severity":1,"message":"64","line":45,"column":32,"nodeType":"65","messageId":"66","endLine":45,"endColumn":34},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"63","severity":1,"message":"64","line":15,"column":34,"nodeType":"65","messageId":"66","endLine":15,"endColumn":36},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"64","line":19,"column":34,"nodeType":"65","messageId":"66","endLine":19,"endColumn":36},{"ruleId":"58","severity":1,"message":"73","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"74","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"75","line":2,"column":18,"nodeType":"60","messageId":"61","endLine":2,"endColumn":31},{"ruleId":"58","severity":1,"message":"76","line":2,"column":33,"nodeType":"60","messageId":"61","endLine":2,"endColumn":44},{"ruleId":"58","severity":1,"message":"77","line":2,"column":46,"nodeType":"60","messageId":"61","endLine":2,"endColumn":50},{"ruleId":"58","severity":1,"message":"78","line":79,"column":11,"nodeType":"60","messageId":"61","endLine":79,"endColumn":20},{"ruleId":"58","severity":1,"message":"79","line":2,"column":31,"nodeType":"60","messageId":"61","endLine":2,"endColumn":41},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],"'useState' is defined but never used.","'Formik' is defined but never used.","'FormikHelpers' is defined but never used.","'FormikProps' is defined but never used.","'Form' is defined but never used.","'animation' is assigned a value but never used.","'FieldProps' is defined but never used.","no-global-assign","no-unsafe-negation"]